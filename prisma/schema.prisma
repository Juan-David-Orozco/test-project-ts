// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String
  firstname String?
  lastname  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationts
  roleId   Int
  role     Role      @relation(fields: [roleId], references: [id])
  projects Project[]

  @@map("users")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  // Relationts
  users User[]

  @@map("roles")
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  startDate   DateTime   @default(now())
  endDate     DateTime?
  status      StatusEnum @default(Pending) // e.g., "Pending", "Active", "Completed"
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relation to User: Who created or owns this project
  createdById Int
  createdBy   User @relation(fields: [createdById], references: [id])

  @@map("projects")
}

enum StatusEnum {
  Pending
  InProgress
  Completed
  Cancelled
  OnHold

  @@map("project_status_enum") // Opcional: Nombre de la tabla de enum en la DB
}
